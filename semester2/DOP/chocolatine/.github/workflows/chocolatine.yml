name: chocolatine
on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

env:
  EXECUTABLES: name
  TESTS: testing
  MIRROR_URL: git@github.com:EpitechPGEPromo2029/B-DOP-200-NCY-2-1-bschocolatine-pierre.maciejewski.git

jobs:
  check_coding_style:
      runs-on: ubuntu-latest
      container: ghcr.io/epitech/coding-style-checker:latest
      steps:
        - uses: actions/checkout@v4
        - run: |
            check.sh $(pwd) $(pwd)
            if [ -s coding-style-reports.log ]; then
              IFS=:
                while read -r a b c d; do
                title=$c
                echo "::error file=$a, line=b,title=$title::$d"
              done < "coding-style-reports.log"
              exit 1
            fi

  check_program_compilation:
    runs-on: ubuntu-latest
    needs: check_coding_style
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
      - run: make
        timeout-minutes: 2
      - run: |
          if [ ! -s ${{ env.EXECUTABLES }} ]; then
            exit 1
          fi
          if [ ! -x ${{ env.EXECUTABLES }} ]; then
            exit 1
          fi
          make fclean
        env:
          EXECUTABLES: name

  run_tests:
    runs-on: ubuntu-latest
    needs: check_program_compilation
    container: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
      - run: make tests_run
        timeout-minutes: 2
      - run: |
          if [ ! -s ${{ env.TESTS }} ]; then
            exit 1
          fi
          if [ ! -x ${{ env.TESTS }} ]; then
            exit 1
          fi
          make fclean
        env:
          TESTS: testing
        

  push_to_mirror:
    runs-on: ubuntu-latest
    needs: run_tests
    if: github.event_name == 'push'
    steps:
      - name: push
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url:
            ${{ env.MIRROR_URL }}
          ssh_private_key:
            ${{ secrets.GIT_SSH_PRIVATE_KEY }}